{
  "hash": "fc1551d3c8c7b8e12db5e1205b3697e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Making a chart on the fly\nauthor: Eric Rauchway\ndate: 2024-10-04\ncategories: \n  - Methods\n---\n\n\n\nI posted a map on social media recently that drew wholly from online resources; I'm trying to do this for all my charts and maps this quarter. There are practical reasons, having to do with not keeping large data files lying around; there are also principled reasons, having to do with reproducible research and adherence to community standards.\n\nI learned to do this mainly by taking [Kieran Healy's invaluable Data Wrangling and Data Visualization course, online.](https://codehorizons.com/Seminars/data-wrangling-with-r/)\n\nI am, I hope, as sensitive as anyone to historians' need to consult archival and arcane resources and I love the library as much as anyone. But if a reasonably authoritative chart or map for teaching can be made from community resources, it probably should be.\n\nSo here's an example; I often like to show something like the comparative impact of the Great Depression. You could go to the library and look in *International Historical Statistics* and type information by hand into a spreadsheet---and I wouldn't want to stop you. But you could also reach out and grab information from, let's say, the [Maddison Project at the University of Groningen.](https://www.rug.nl/ggdc/historicaldevelopment/maddison/?lang=en)[^1]\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the R code\"}\n## make a list of packages we will use\npackages <- c(\"tidyverse\", \"haven\")\n## install the packages not already installed\ninstall.packages(setdiff(packages, rownames(installed.packages())))\n## make the code available for this exercise\nlapply(packages, \"library\", character.only=TRUE)\n## Read data from the University of Groningen Maddison Project\nread_dta(file = \"https://dataverse.nl/api/access/datafile/421303\") |>\n  filter(year > 1919 & year < 1940) |> ## limit data to interwar years\n  filter(country == \"Germany\" | ## select some industrial countries\n           country == \"France\" |\n           country == \"United Kingdom\" |\n           country == \"United States\") -> data ## store data\n## now let's plot the data\ndata |>\n  ggplot() +\n  geom_line(aes(x = year, \n                y = gdppc, \n                group = country, \n                color = country),\n            linewidth = 1) +\n  labs (\n    x = \"\", y = \"GDP per capita in 2011 USD\",\n    color = \"\", \n    caption = \"Chart made using R and ggplot by Eric Rauchway with data from Maddison Project Database, version 2023 by Jutta Bolt and Jan Luiten van Zanden.\",\n    title = \"Real GDP in the Great Depression, selected countries\"\n  ) -> p ## store this graph in an object called \"p\"---we'll want it again in a second\n## now, display the object called \"p\"\np \n```\n\n::: {.cell-output-display}\n![](gdp_chart_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nEverything else is aesthetics. \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the R code\"}\n## some code packages for prettification\nmore_packages <- c(\"showtext\", \"ggtext\", \"scales\", \"grafify\")\n## install these packages not already installed\ninstall.packages(setdiff(more_packages, rownames(installed.packages())))\n## make this code available for this exercise\nlapply(more_packages, \"library\", character.only=TRUE)\n## get some fonts from google\nfont_add_google(name = \"Public Sans\", family = \"Public Sans\")\nfont_add_google(name = \"Holtwood One SC\", family = \"Holtwood One SC\")\nshowtext_auto()\n## make some choices for how we want the graph to look\ntheme_set(\n  theme_void() +\n    theme(\n      text = element_text(family = \"Public Sans\", \n                          color = \"midnightblue\"),\n      plot.title = element_markdown(family = \"Holtwood One SC\", \n                                    color = \"khaki4\"),\n      plot.title.position = \"plot\",\n      plot.caption = element_markdown(size = rel(0.5)),\n      plot.background = element_rect(fill = \"floralwhite\",\n                                     color = \"floralwhite\"),\n      plot.margin = margin(l=10,r=10),\n      axis.text = element_text(margin = margin(2,2,2,4)),\n      axis.title.y = element_text(angle = 90, margin =\n                                    margin(2,2,4,2)),\n      axis.line = element_line(color = \"chocolate4\"),\n      axis.ticks = element_line(color = \"chocolate3\"),\n      axis.ticks.length = unit(1, \"mm\"),\n      legend.position = \"inside\",\n      legend.justification.inside = c(0.98, 0.05),\n      panel.background = element_rect(fill = \"antiquewhite1\",\n                                      color = \"NA\")\n    )\n)\n\n## now, make the plot again, but with these aesthetic choices, calling up the object \"p\" where we stored the plot before\np +\n  scale_color_grafify(palette = \"r4\") + ## a color-blind-friendly palette\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale()))\n```\n\n::: {.cell-output-display}\n![](gdp_chart_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nSo the key here is, none of this data or even, in this example, the fonts live on my computer, or the server; it's all pulled from the web. Which means you could copy the code and run it on your computer, in some environment supporting R, and it should work the same.\n\n[^1]: See @bolt2024 I had the good fortune to sit next to Maddison at dinner once. He was a very pleasant conversationalist. This ranks up there, for data nerdery, with the times I've had dinner with a PI of American National Election Studies and with a co-director of Correlates of War.  ",
    "supporting": [
      "gdp_chart_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}