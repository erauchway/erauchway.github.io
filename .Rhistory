## make a list of packages we will use
packages <- c(tidyverse)
## make a list of packages we will use
packages <- c("tidyverse")
## install the packages not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
library(tidyverse)
## make the code available for this exercise
library(packages)
require(pacman)
## make a list of packages we will use
packages <- c("tidyverse", "haven")
## install the packages not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
## make the code available for this exercise
lapply(packages, "library", character.only=TRUE)
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303")
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(country == "Germany" |
country == "France" |
country == "Great Britain")
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |>
filter(country == "Germany" |
country == "France" |
country == "Great Britain")
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |>
filter(country == "Germany" |
country == "France" |
country == "United Kingdom")
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |>
filter(country == "Germany" |
country == "France" |
country == "United Kingdom" |
country == "United States of America")
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |>
filter(country == "Germany" |
country == "France" |
country == "United Kingdom" |
country == "United States")
## make a list of packages we will use
packages <- c("tidyverse", "haven")
## install the packages not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
## make the code available for this exercise
lapply(packages, "library", character.only=TRUE)
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |> ## limit data to interwar years
filter(country == "Germany" | ## select some industrial countries
country == "France" |
country == "United Kingdom" |
country == "United States") -> data ## store data
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year, y = gdppc))
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year, y = gdppc, group = country))
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year, y = gdppc, group = country, color = country))
#| code-fold: true
#| code-summary: "Show the code"
## make a list of packages we will use
packages <- c("tidyverse", "haven")
## install the packages not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
## make the code available for this exercise
lapply(packages, "library", character.only=TRUE)
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |> ## limit data to interwar years
filter(country == "Germany" | ## select some industrial countries
country == "France" |
country == "United Kingdom" |
country == "United States") -> data ## store data
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year, y = gdppc, group = country, color = country))
#| code-fold: true
#| code-summary: "Show the code"
## some code packages for prettification
more_packages <- c("showtext", "ggtext", "scales", "grafify")
## install these packages not already installed
install.packages(setdiff(more_packages, rownames(installed.packages())))
## make this code available for this exercise
lapply(more_packages, "library", character.only=TRUE)
## get some fonts from google
font_add_google(name = "Public Sans", family = "Public Sans")
font_add_google(name = "Bevan", family = "Bevan")
showtext_auto()
## make some choices for how we want the graph to look
theme_set(
theme_void() +
theme(
text = element_text(family = "Public Sans",
color = "midnightblue"),
plot.title = element_markdown(family = "Bevan",
color = "khaki4"),
plot.caption = element_markdown(size = rel(0.5)),
plot.background = element_rect(fill = "floralwhite",
color = "floralwhite"),
plot.margin = margin(l=10,r=10),
axis.text = element_text(margin = margin(2,2,2,2)),
axis.title.y = element_text(angle = 90, margin =
margin(2,2,2,2)),
axis.line = element_line(color = "chocolate4"),
axis.ticks = element_line(color = "chocolate3"),
axis.ticks.length = unit(1, "mm"),
legend.position = "inside",
legend.justification.inside = c(0.98, 0.05),
panel.background = element_rect(fill = "antiquewhite1",
color = "NA")
)
)
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p
#| code-fold: true
#| code-summary: "Show the code"
## make a list of packages we will use
packages <- c("tidyverse", "haven")
## install the packages not already installed
install.packages(setdiff(packages, rownames(installed.packages())))
## make the code available for this exercise
lapply(packages, "library", character.only=TRUE)
## Read data from the University of Groningen Maddison Project
read_dta(file = "https://dataverse.nl/api/access/datafile/421303") |>
filter(year > 1919 & year < 1940) |> ## limit data to interwar years
filter(country == "Germany" | ## select some industrial countries
country == "France" |
country == "United Kingdom" |
country == "United States") -> data ## store data
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year, y = gdppc, group = country, color = country)) +
labs (
x = "", y = "GDP per capita in 2011 USD",
color = "", caption = "Data from Maddison Project Database, version 2023 by Jutta Bolt and Jan Luiten van Zanden."
) -> p ## store this graph in an object called "p"---we'll want it again in a second
## now, display the object called "p"
p
#| code-fold: true
#| code-summary: "Show the code"
## some code packages for prettification
more_packages <- c("showtext", "ggtext", "scales", "grafify")
## install these packages not already installed
install.packages(setdiff(more_packages, rownames(installed.packages())))
## make this code available for this exercise
lapply(more_packages, "library", character.only=TRUE)
## get some fonts from google
font_add_google(name = "Public Sans", family = "Public Sans")
font_add_google(name = "Bevan", family = "Bevan")
showtext_auto()
## make some choices for how we want the graph to look
theme_set(
theme_void() +
theme(
text = element_text(family = "Public Sans",
color = "midnightblue"),
plot.title = element_markdown(family = "Bevan",
color = "khaki4"),
plot.caption = element_markdown(size = rel(0.5)),
plot.background = element_rect(fill = "floralwhite",
color = "floralwhite"),
plot.margin = margin(l=10,r=10),
axis.text = element_text(margin = margin(2,2,2,2)),
axis.title.y = element_text(angle = 90, margin =
margin(2,2,2,2)),
axis.line = element_line(color = "chocolate4"),
axis.ticks = element_line(color = "chocolate3"),
axis.ticks.length = unit(1, "mm"),
legend.position = "inside",
legend.justification.inside = c(0.98, 0.05),
panel.background = element_rect(fill = "antiquewhite1",
color = "NA")
)
)
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_fill_grafify(palette = "r4")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_fill_grafify(palette = "r4")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "kelly")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "safe")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "safe") ## a color-blind-friendly palette
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "kelly") ## a color-blind-friendly palette
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4") ## a color-blind-friendly palette
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year,
y = gdppc,
group = country,
color = country),
linewidth = 1) +
labs (
x = "", y = "GDP per capita in 2011 USD",
color = "", caption = "Data from Maddison Project Database, version 2023 by Jutta Bolt and Jan Luiten van Zanden."
) -> p ## store this graph in an object called "p"---we'll want it again in a second
## now, display the object called "p"
p
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year,
y = gdppc,
group = country,
color = country),
linewidth = 1) +
labs (
x = "", y = "GDP per capita in 2011 USD",
color = "",
caption = "Data from Maddison Project Database, version 2023 by Jutta Bolt and Jan Luiten van Zanden.",
title = "Real GDP in the Great Depression, selected countries"
) -> p ## store this graph in an object called "p"---we'll want it again in a second
## now, display the object called "p"
p
font_add_google(name = "Holtwood One SC", family = "Holtwood One SC")
## make some choices for how we want the graph to look
theme_set(
theme_void() +
theme(
text = element_text(family = "Public Sans",
color = "midnightblue"),
plot.title = element_markdown(family = "Holtwood One SC",
color = "khaki4"),
plot.caption = element_markdown(size = rel(0.5)),
plot.background = element_rect(fill = "floralwhite",
color = "floralwhite"),
plot.margin = margin(l=10,r=10),
axis.text = element_text(margin = margin(2,2,2,2)),
axis.title.y = element_text(angle = 90, margin =
margin(2,2,2,2)),
axis.line = element_line(color = "chocolate4"),
axis.ticks = element_line(color = "chocolate3"),
axis.ticks.length = unit(1, "mm"),
legend.position = "inside",
legend.justification.inside = c(0.98, 0.05),
panel.background = element_rect(fill = "antiquewhite1",
color = "NA")
)
)
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4") ## a color-blind-friendly palette
## now let's plot the data
data |>
ggplot() +
geom_line(aes(x = year,
y = gdppc,
group = country,
color = country),
linewidth = 1) +
labs (
x = "", y = "GDP per capita in 2011 USD",
color = "",
caption = "Chart made using R and ggplot by Eric Rauchway with data from Maddison Project Database, version 2023 by Jutta Bolt and Jan Luiten van Zanden.",
title = ""
) -> p ## store this graph in an object called "p"---we'll want it again in a second
## now, display the object called "p"
p
## make some choices for how we want the graph to look
theme_set(
theme_void() +
theme(
text = element_text(family = "Public Sans",
color = "midnightblue"),
plot.title = element_markdown(family = "Holtwood One SC",
color = "khaki4"),
plot.title.position = "plot",
plot.caption = element_markdown(size = rel(0.5)),
plot.background = element_rect(fill = "floralwhite",
color = "floralwhite"),
plot.margin = margin(l=10,r=10),
axis.text = element_text(margin = margin(2,2,2,2)),
axis.title.y = element_text(angle = 90, margin =
margin(2,2,2,2)),
axis.line = element_line(color = "chocolate4"),
axis.ticks = element_line(color = "chocolate3"),
axis.ticks.length = unit(1, "mm"),
legend.position = "inside",
legend.justification.inside = c(0.98, 0.05),
panel.background = element_rect(fill = "antiquewhite1",
color = "NA")
)
)
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4") ## a color-blind-friendly palette
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4") + ## a color-blind-friendly palette
scale_y_continuous(labels = "comma")
## now, make the plot again, but with these aesthetic choices, calling up the object "p" where we stored the plot before
p +
scale_color_grafify(palette = "r4") + ## a color-blind-friendly palette
scale_y_continuous(labels = label_comma())
